name: 'Make Release'

on:
  push:
    tags: [ '[0-9]+.[0-9]+.[0-9]+-?**' ]
  workflow_dispatch:

defaults:
  run:
    shell:  |
            pwsh -noninteractive -command "try {{ $ErrorActionPreference='Stop'; . '{0}' }} catch {{ Write-Error ""FAILED: $_""; throw; }} if ((Test-Path -LiteralPath variable:\LASTEXITCODE)) {{ exit $LASTEXITCODE }}"

jobs:
  # This job is required because C# is assholes and dotnet publish refuses to use the version number set by the SetVersion.ps1 script.
  make-release:
    runs-on:  windows-latest
    
    steps:
      - uses: actions/checkout@v4
        with:
          ref:          'main'
          fetch-depth:  0

      - name:   Update `.csproj` version, Push changes, Move tag to new commit
        run:    |
                $tag = $(git describe --tags --abbrev=0)
                $tag -cmatch '(?<MAJOR>\d+?)\.(?<MINOR>\d+?)\.(?<PATCH>\d+?)(?<EXTRA>.*)' > $null
                $tag_3_part = $Matches.MAJOR + '.' + $Matches.MINOR + '.' + $Matches.PATCH
                ./.github/workflows/scripts/SetVersion.ps1 -Path radj307.IconExtractor/radj307.IconExtractor.csproj  Version=$tag  FileVersion=$tag_3_part

                git config user.name github-actions
                git config user.email github-actions@github.com
                git add -A
                git commit -m "Update .csproj Version Numbers"
                git push origin

                git tag -d $tag
                git push origin :refs/tags/$tag
                git tag $tag
                git push origin $tag
                
      - uses: actions/setup-dotnet@main
        with:
          dotnet-version:   6.0.x
          
      - name:   Build Package
        run:    |
                dotnet build -c Release
                dotnet pack ./radj307.IconExtractor/radj307.IconExtractor.csproj --noLogo -c Release -o ./publish --include-symbols

      - name:   Upload Artifact
        uses:   actions/upload-artifact@v3
        with:
          name: nupkg
          path: './publish/*'
          if-no-files-found: error

      - name: Create Release
        uses: ncipollo/release-action@v1.13.0
        with:
          artifacts: |
                     "./publish/*"
          
      - name:   Authenticate with Github NuGet Package Registry
        run:    dotnet nuget add source --username radj307 --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/radj307/index.json"

      - name:   Upload Packages
        run:    >
                foreach ($pkg in $(Get-ChildItem -Filter *.nupkg)) {
                  dotnet push $pkg.Name -k ${{ github.token }} -s https://nuget.pkg.github.com/radj307/index.json --skip-duplicate
                  dotnet nuget push $pkg.Name -k ${{ secrets.NUGET_API_KEY_VOLUMECONTROLSDK }} -s https://api.nuget.org/v3/index.json --skip-duplicate
                }
        
# HEAD:github-actions
