name: Generate Release

on:
  workflow_run:
    workflows:
      - 'Update Version'
    types:
      - 'completed'

defaults:
  run:
    shell:  |
            pwsh -noninteractive -command "try {{ $ErrorActionPreference='Stop'; . '{0}' }} catch {{ Write-Error ""FAILED: $_""; throw; }} if ((Test-Path -LiteralPath variable:\LASTEXITCODE)) {{ exit $LASTEXITCODE }}"
            
jobs:
  build-release: # Only run on successful version update action
    runs-on:  windows-latest
    if:       ${{ github.event.workflow_run.conclusion == 'success' }}
    env:
      DOTNET_NOLOGO:                true
      DOTNET_CLI_TELEMETRY_OPTOUT:  true

    steps:
      - uses: actions/checkout@v4
        with:
          ref: '${{ github.ref }}'

      - uses: actions/setup-dotnet@main
        with:
          dotnet-version:   6.0.x

      - name:   Build
        run:    dotnet build -c Release
        
      - name:   Upload Artifact
        uses:   actions/upload-artifact@v3
        with:
          name: sdk
          path: './publish/*'
          if-no-files-found: error

  # Create the release using the uploaded artifact on github:
  create-release:
    needs:    build-release
    runs-on:  ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          path:  ${{github.workspace}}

      - run:  ls -lAghR
      
      - uses: actions/checkout@v4
        with:
          ref: '${{ github.ref }}'

      - name: Get Latest Tag
        id:   get_tag
        uses: WyriHaximus/github-action-get-previous-tag@v1

      - name: Create Release
        uses: ncipollo/release-action@v1.13.0
        with:
          artifacts: |
                     "*.nupkg"
                     "*.snupkg"
          tag: '${{ steps.get_tag.outputs.tag }}'